# -*- coding: utf-8 -*-
"""원자재 관리_자동화.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RBWlL87KKl6rphOCnZEmnHRCT5qtQvxw
"""

import pandas as pd
import pymysql
from sqlalchemy import create_engine
import numpy as np
from datetime import datetime, timedelta

# 테블로 전용 일일 소비량


now = datetime.now().strftime('%R')
print('Tableau Daily Raw Update Start --',now)

conn = pymysql.connect(host='34.64.224.44', user='root', password='A412GBVSDsawe%$we', db='smart_factory')
sql_state='SELECT * FROM `production_planning`'
planning=pd.read_sql_query(sql_state, conn)

sql_state='SELECT * FROM `recipe`'
recipe=pd.read_sql_query(sql_state, conn)

planning=planning.groupby(['SOLDDATE','CUSTID','PRODNAME']).sum().reset_index()
daily_raw=pd.merge(planning,recipe,how='left',on=['PRODNAME'])

for raw in ['SR11002', 'SR35218','SR35904', 'SR15500', 'SR13801', 'SR16600', 'SR35224', 'SR35903',
       'SR68222', 'SR35225', 'SR35228', 'SR38117', 'SR16002', 'SR35758',
       'SR35210', 'SR34364', 'SR35500', 'SR35556', 'SR18520', 'SR35217',
       'SR35905', 'SR35755', 'SR34307', 'SR35760', 'SR35761', 'SR35765',
       'SR34311', 'SR35211', 'TSN4012039104', 'SR35221', 'SR16003',
       'PEMA023017400', 'TSN4012057700', 'SR47093', 'SSA043031400']:
  daily_raw[raw] = daily_raw[raw]*daily_raw['QUANT']

daily_raw_head=daily_raw.iloc[:,:4]
daily_raw_tail=daily_raw.iloc[:,4:]

daily_raw_tail=daily_raw_tail.T.reset_index()

new_raw_tail=pd.DataFrame()

for next in range(1,len(daily_raw_tail.columns)):
  temp_df=daily_raw_tail.iloc[:,[0,next]]
  temp_df.columns=['raw','raw_quant']
  new_raw_tail = pd.concat((new_raw_tail,temp_df),axis=0)

new_raw_front=pd.DataFrame()

for raw in range(0,35):
  new_raw_front = pd.concat((new_raw_front,daily_raw_head),axis=0)

new_raw_front=new_raw_front.sort_index()

index=np.arange(0,len(new_raw_front))

new_raw_front=new_raw_front.set_index(index)
new_raw_tail=new_raw_tail.set_index(index)

result=pd.concat((new_raw_front,new_raw_tail),axis=1)

db_connection_str = 'mysql+pymysql://root:A412GBVSDsawe%$we@34.64.224.44:3306/smart_factory'
db_connection = create_engine(db_connection_str)
conn = db_connection.connect() 

result.to_sql(name = 'tableau_daily_raw',con = db_connection, index = False, if_exists = 'replace')

now = datetime.now().strftime('%R')
print('Tableau Daily Raw Update End --',now)

#발주량 테블로

now = datetime.now().strftime('%R')
print('Tableau Week Order Amount Update Start --',now)
conn = pymysql.connect(host='34.64.224.44', user='root', password='A412GBVSDsawe%$we', db='smart_factory')

sql_state='SELECT * FROM `week_order_amount`'
week_order_amount=pd.read_sql_query(sql_state, conn)

week_order_amount_head=week_order_amount.iloc[:,:1]
week_order_amount_tail=week_order_amount.iloc[:,1:]

week_order_amount_tail=week_order_amount_tail.T.reset_index()

new_raw_tail=pd.DataFrame()

for next in range(1,len(week_order_amount_tail.columns)):
  temp_df=week_order_amount_tail.iloc[:,[0,next]]
  temp_df.columns=['raw','raw_quant']
  new_raw_tail = pd.concat((new_raw_tail,temp_df),axis=0)

new_raw_front=pd.DataFrame()

for raw in range(0,35):
  new_raw_front = pd.concat((new_raw_front,week_order_amount_head),axis=0)

new_raw_front=new_raw_front.sort_index()

index=np.arange(0,len(new_raw_front))

new_raw_front=new_raw_front.set_index(index)
new_raw_tail=new_raw_tail.set_index(index)

result=pd.concat((new_raw_front,new_raw_tail),axis=1)

week_order_amount_head=week_order_amount.iloc[:,:1]
week_order_amount_tail=week_order_amount.iloc[:,1:]

week_order_amount_tail=week_order_amount_tail.T.reset_index()

new_raw_tail=pd.DataFrame()

for next in range(1,len(week_order_amount_tail.columns)):
  temp_df=week_order_amount_tail.iloc[:,[0,next]]
  temp_df.columns=['raw','raw_quant']
  new_raw_tail = pd.concat((new_raw_tail,temp_df),axis=0)

new_raw_front=pd.DataFrame()

for raw in range(0,35):
  new_raw_front = pd.concat((new_raw_front,week_order_amount_head),axis=0)

new_raw_front=new_raw_front.sort_index()

index=np.arange(0,len(new_raw_front))

new_raw_front=new_raw_front.set_index(index)
new_raw_tail=new_raw_tail.set_index(index)

result=pd.concat((new_raw_front,new_raw_tail),axis=1)

now = datetime.now().strftime('%R')
print('Tableau Week Order Amount Update End --',now)

# 테블로 피벗

now = datetime.now().strftime('%R')
print('Tableau Stock Raw Update Start --',now)

conn = pymysql.connect(host='34.64.224.44', user='root', password='A412GBVSDsawe%$we', db='smart_factory')
sql_state='SELECT * FROM `stock_raw`'
stock_raw=pd.read_sql_query(sql_state, conn)

stock_raw_head=stock_raw.iloc[:,:1]
stock_raw_tail=stock_raw.iloc[:,1:]

stock_raw_tail=stock_raw_tail.T.reset_index()

new_raw_tail=pd.DataFrame()

for next in range(1,len(stock_raw_tail.columns)):
  temp_df=stock_raw_tail.iloc[:,[0,next]]
  temp_df.columns=['raw','raw_quant']
  new_raw_tail = pd.concat((new_raw_tail,temp_df),axis=0)

new_raw_front=pd.DataFrame()

for raw in range(0,35):
  new_raw_front = pd.concat((new_raw_front,stock_raw_head),axis=0)

new_raw_front=new_raw_front.sort_index()

index=np.arange(0,len(new_raw_front))

new_raw_front=new_raw_front.set_index(index)
new_raw_tail=new_raw_tail.set_index(index)

result=pd.concat((new_raw_front,new_raw_tail),axis=1)

db_connection_str = 'mysql+pymysql://root:A412GBVSDsawe%$we@34.64.224.44:3306/smart_factory'
db_connection = create_engine(db_connection_str)
conn = db_connection.connect()

result.to_sql(name = 'tableau_stock_raw',con = db_connection, index = False, if_exists = 'replace')

now = datetime.now().strftime('%R')
print('Tableau Stock Raw Update End --',now)