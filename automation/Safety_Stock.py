# -*- coding: utf-8 -*-
"""안전재고량-자동화.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18eMibQDoPBeem0JvD7NmBpADsRV_-mlu
"""

# 현재 데이터로 일별 원자재 필요량

import pandas as pd
import pymysql
from sqlalchemy import create_engine
import datetime

now = datetime.datetime.now().strftime('%R')
print('Safety Stock Update Start --',now)

conn = pymysql.connect(host='34.64.224.44', user='root', password='A412GBVSDsawe%$we', db='smart_factory')
sql_state='SELECT * FROM `rawdata`'
rawdata=pd.read_sql_query(sql_state, conn)

sql_state='SELECT * FROM `recipe`'
recipe=pd.read_sql_query(sql_state, conn)

rawdata=rawdata.groupby(['SOLDDATE','PRODNAME']).sum().reset_index()
daily_raw=pd.merge(rawdata,recipe,how='left',on=['PRODNAME'])

for raw in ['SR11002', 'SR35218','SR35904', 'SR15500', 'SR13801', 'SR16600', 'SR35224', 'SR35903',
       'SR68222', 'SR35225', 'SR35228', 'SR38117', 'SR16002', 'SR35758',
       'SR35210', 'SR34364', 'SR35500', 'SR35556', 'SR18520', 'SR35217',
       'SR35905', 'SR35755', 'SR34307', 'SR35760', 'SR35761', 'SR35765',
       'SR34311', 'SR35211', 'TSN4012039104', 'SR35221', 'SR16003',
       'PEMA023017400', 'TSN4012057700', 'SR47093', 'SSA043031400']:
  daily_raw[raw] = daily_raw[raw]*daily_raw['QUANT']

daily_raw=daily_raw.drop(['PRODNAME','QUANT','CUSTID'],axis=1)
daily_raw=daily_raw.groupby('SOLDDATE').sum()
daily_raw=daily_raw.reset_index()

db_connection_str = 'mysql+pymysql://root:A412GBVSDsawe%$we@34.64.224.44:3306/smart_factory'
db_connection = create_engine(db_connection_str)
conn = db_connection.connect()

daily_raw.to_sql(name = 'past_daily_raw',con = db_connection, index = False, if_exists = 'replace')

# 안전재고량

conn = pymysql.connect(host='34.64.224.44', user='root', password='A412GBVSDsawe%$we', db='smart_factory')
sql_state='SELECT * FROM `past_daily_raw`'
df1=pd.read_sql_query(sql_state, conn)

df1.loc[df1['SOLDDATE'].dt.year == datetime.datetime.now().year - 1]

df1=df1.drop(['SOLDDATE'],axis=1)

safety_stock = pd.DataFrame()

cols = df1.columns

raw_material =[]
safety_st =[]
for col in cols:
  max_raw = int(df1[[col]].sort_values(by=col,ascending=False).max().values)
  mean_raw = int(df1[[col]].sort_values(by=col,ascending=False).mean().values)
  safetyst = (max_raw * 12) - (mean_raw * 9) # (일일 최고 판매량 * 최대 리드타임) - (일일 평균 판매량 * 평균 리드타임)
  raw_material.append(col)
  safety_st.append(safetyst)

safety_stock['raw_material'] = raw_material
safety_stock['safety_stock'] = safety_st

db_connection_str = 'mysql+pymysql://root:A412GBVSDsawe%$we@34.64.224.44:3306/smart_factory'
db_connection = create_engine(db_connection_str)
conn = db_connection.connect()

safety_stock.to_sql(name = 'safety_stock',con = db_connection, index = False, if_exists = 'replace') # 테이블 삭제하고 새로 만들 때 사용

now = datetime.datetime.now().strftime('%R')
print('Safety Stock Update End --',now)